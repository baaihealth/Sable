
grad_norm:
  _target_: opencomplex.experimental.grad_norm_callback.GradNormCallback

learning_rate_monitor:
  _target_: lightning.pytorch.callbacks.LearningRateMonitor
  log_momentum: false
  # log_weight_decay: false
  logging_interval: step # step, epoch, none

model_checkpoint:
  _target_: lightning.pytorch.callbacks.ModelCheckpoint
  auto_insert_metric_name: False # when True, the checkpoints filenames will contain the metric name
  dirpath: ${paths.output_dir}/checkpoints # directory to save the model file
  every_n_epochs: null # number of epochs between checkpoints
  every_n_train_steps: null # number of training steps between checkpoints
  filename: "{epoch:03d}" # checkpoint filename
  mode: "max" # "max" means higher metric value is better, can be also "min"
  monitor: null # name of the logged metric which determines when model is improving
  save_last: True # additionally always save an exact copy of the last checkpoint to a file last.ckpt
  save_on_train_epoch_end: null # whether to run checkpointing at the end of the training epoch or the end of validation
  save_top_k: 3 # save k best models (determined by above metric)
  save_weights_only: False # if True, then only the modelâ€™s weights will be saved
  train_time_interval: null # checkpoints are monitored at the specified time interval
  verbose: False # verbosity mode, will show sable' own instead

rich_progress_bar:
  _target_: lightning.pytorch.callbacks.RichProgressBar
  theme:
    _target_: lightning.pytorch.callbacks.progress.rich_progress.RichProgressBarTheme
    metrics_format: .3e

